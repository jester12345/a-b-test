{"version":3,"sources":["../src/index.js"],"names":["ABTest","button","document","getElementById","addEventListener","openModal","bind","console","error","overlay","closeModal","modal","initModal","e","stopPropagation","modalForm","submitPriceForm","setupFormErrorMessages","modalImage","modalCloseButton","setStateOptions","customInputEvent","required","label","placeholder","id","elem","me","elements","indexOf","tagName","getAttribute","dataset","validate","createElement","setAttribute","classList","add","innerHTML","parentNode","insertBefore","nextSibling","variant","localStorage","getItem","Math","floor","random","setItem","parseInt","getVariant","imgSrc","priceQuoteImg","src","statesList","priceQuoteState","option","s","value","appendChild","selectedIndex","remove","priceQuoteName","log","sessionId","session_id","Date","getTime","preventDefault","numErrors","data","variation","filled","type","forId","toLowerCase","length","focus","name"],"mappings":"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","file":"index.js","sourcesContent":["class ABTest {\n    /**\n     * Initiate the ABTest class.\n     */\n    constructor() {\n        // Initialize the button click events\n        let button = document.getElementById('price_button');\n\n        if( button ) {\n            /**\n             * Add the onClick event listener to the button.\n             * Be sure to bind the correct context of \"this\",\n             * otherwise \"this\" becomes the button.\n             */\n            button.addEventListener('click', this.openModal.bind(this), false);\n        } else {\n            console.error('Price quote button is missing.');\n        }\n\n        // Initialize the modal overlay\n        this.overlay = document.getElementById('overlay');\n\n        if( this.overlay ) {\n            /**\n             * Add the onClick event listener to the overlay. This\n             * allows the user to dismiss the overly by clicking on it.\n             * Be sure to bind the correct context of \"this\",\n             * otherwise \"this\" becomes the overlay.\n             */\n            this.overlay.addEventListener('click', this.closeModal.bind(this), false);\n        } else {\n            console.error('Modal overlay is missing.');\n        }\n\n        // Initialize the modal\n        this.modal = document.getElementById('modal');\n\n        if( this.modal ) {\n            this.initModal();\n        } else {\n            console.error('Modal is missing.');\n        }\n    }\n\n    \n\n    /**\n     * Initialize the modal so it works like we want.\n     */\n    initModal() {\n        // Capture clicks inside the modal\n        this.modal.addEventListener('click', function(e) {\n            e.stopPropagation();\n        }, false);\n\n        /**\n         * Add the onSubmit event listener to the form\n         * so we are able to submit via ajax\n         * Be sure to bind the correct context of \"this\",\n         * otherwise \"this\" becomes the form.\n         */\n        this.modalForm = document.getElementById('price_quote_form');\n        this.modalForm.addEventListener('submit', this.submitPriceForm.bind(this), false);\n\n        // Set up the form error messages\n        this.setupFormErrorMessages();\n\n        // Initialize the image in the modal\n        this.modalImage();\n\n        // Initialize the close button\n        this.modalCloseButton();\n        \n        // Init the State select menu\n        this.setStateOptions();\n\n        // Input event on name field\n        this.customInputEvent();\n    }\n\n    /**\n     * Create the error labels for the form. By creating them\n     * programatically we are able to keep their style and\n     * behavior consistent.\n     */\n    setupFormErrorMessages() {\n        /**\n         * Loop over the form and find the fields we care about.\n         * We're only setting required here, but we could add other\n         * conditions to check for as well, such as the type of input.\n         */\n        let required, label, placeholder, id, elem;\n        for( let me in this.modalForm.elements ) {\n            elem = this.modalForm.elements[me];\n\n            // Skip the duplicates that Chrome adds, and only operate on real form elements\n            if( me.indexOf('price_quote') !== 0 && elem && elem.tagName ) {\n                required = elem.getAttribute('required');\n                \n                if( required !== null ) {\n                    // This field is required\n                    elem.dataset.validate = true;\n                    placeholder = elem.getAttribute('placeholder');\n                    id          = elem.getAttribute('id');\n\n                    // Build the error label\n                    label = document.createElement('label');\n                    label.setAttribute('for', id);\n                    label.setAttribute('id', 'for_' + id);\n                    label.classList.add('error');\n                    label.innerHTML = 'Please fill in your ' + placeholder + '.';\n\n                    // User insertBefore to insert after\n                    if ( elem.parentNode ) {\n                        elem.parentNode.insertBefore( label, elem.nextSibling );\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Make sure a variant is set. If so, return it. If not, generate it and then return it.\n     * @return {int}    The variant the current user is using.\n     */\n    getVariant() {\n        let variant = false;\n        try {\n            variant = localStorage.getItem('variant'); // Local storage stores everything as strings\\\n        } catch (e) {\n            // The browser is blocking local storage, we'll have to get a new one.\n            // Server-side storage would be more robust.\n        }\n        if( !variant ) {\n            // variant is not set\n            variant = Math.floor(Math.random() * 2) + 1;\n            try {\n                localStorage.setItem('variant', variant);\n            } catch(e) {\n                // The browser is blocking local storage, so this user may get a differet modal next time.\n            }\n        } else {\n            // Local storage stores as a string, so we need to parse back to an it.\n            variant = parseInt(variant, 10);\n        }\n\n        return variant;\n    }\n\n    /**\n     * Initialize the modal image based on the variant the current user should see.\n     */\n    modalImage() {\n        // Get the variant to show this user\n        let variant = this.getVariant();\n\n        let imgSrc = false;\n        if( variant === 1 ) {\n            // Image 1\n            imgSrc = 'img/without-check.jpg';\n        } else if ( variant === 2 ) {\n            // Image 2\n            imgSrc = 'img/with-check.jpg';\n        } else {\n            console.error(\"Unsupported variant :\", variant);\n        }\n\n        if( imgSrc ) {\n            let priceQuoteImg = document.getElementById('price_quote_image');\n\n            if( priceQuoteImg ) {\n                priceQuoteImg.src = imgSrc;\n                priceQuoteImg.classList.add('show');\n            } else {\n                console.error('Modal price quote image is missing.');\n            }\n        }\n    }\n\n    /**\n     * Initialize the modal close button.\n     */\n    modalCloseButton() {\n        let button = document.getElementById('close_button');\n\n        if( button ) {\n            /**\n             * Add the closeModal event listener to the button.\n             * Be sure to bind the correct context of \"this\",\n             * otherwise \"this\" becomes the button.\n             */\n            button.addEventListener('click', this.closeModal.bind(this), false);\n        } else {\n            console.error('Modal close button is missing.');\n        }\n    }\n\n    /**\n     * Set up the state select menu.\n     */\n    setStateOptions() {\n        // Courtesy of: https://gist.github.com/mshafrir/2646763\n        const statesList = {\n            \"AL\": \"Alabama\",\n            \"AK\": \"Alaska\",\n            \"AS\": \"American Samoa\",\n            \"AZ\": \"Arizona\",\n            \"AR\": \"Arkansas\",\n            \"CA\": \"California\",\n            \"CO\": \"Colorado\",\n            \"CT\": \"Connecticut\",\n            \"DE\": \"Delaware\",\n            \"DC\": \"District Of Columbia\",\n            \"FM\": \"Federated States Of Micronesia\",\n            \"FL\": \"Florida\",\n            \"GA\": \"Georgia\",\n            \"GU\": \"Guam\",\n            \"HI\": \"Hawaii\",\n            \"ID\": \"Idaho\",\n            \"IL\": \"Illinois\",\n            \"IN\": \"Indiana\",\n            \"IA\": \"Iowa\",\n            \"KS\": \"Kansas\",\n            \"KY\": \"Kentucky\",\n            \"LA\": \"Louisiana\",\n            \"ME\": \"Maine\",\n            \"MH\": \"Marshall Islands\",\n            \"MD\": \"Maryland\",\n            \"MA\": \"Massachusetts\",\n            \"MI\": \"Michigan\",\n            \"MN\": \"Minnesota\",\n            \"MS\": \"Mississippi\",\n            \"MO\": \"Missouri\",\n            \"MT\": \"Montana\",\n            \"NE\": \"Nebraska\",\n            \"NV\": \"Nevada\",\n            \"NH\": \"New Hampshire\",\n            \"NJ\": \"New Jersey\",\n            \"NM\": \"New Mexico\",\n            \"NY\": \"New York\",\n            \"NC\": \"North Carolina\",\n            \"ND\": \"North Dakota\",\n            \"MP\": \"Northern Mariana Islands\",\n            \"OH\": \"Ohio\",\n            \"OK\": \"Oklahoma\",\n            \"OR\": \"Oregon\",\n            \"PW\": \"Palau\",\n            \"PA\": \"Pennsylvania\",\n            \"PR\": \"Puerto Rico\",\n            \"RI\": \"Rhode Island\",\n            \"SC\": \"South Carolina\",\n            \"SD\": \"South Dakota\",\n            \"TN\": \"Tennessee\",\n            \"TX\": \"Texas\",\n            \"UT\": \"Utah\",\n            \"VT\": \"Vermont\",\n            \"VI\": \"Virgin Islands\",\n            \"VA\": \"Virginia\",\n            \"WA\": \"Washington\",\n            \"WV\": \"West Virginia\",\n            \"WI\": \"Wisconsin\",\n            \"WY\": \"Wyoming\"\n        };\n\n        this.priceQuoteState = document.getElementById('price_quote_state');\n\n        // Build the options for the select menu\n        let option;\n        for( let s in statesList ) {\n            option              = document.createElement('option');\n            option.value        = s;\n            option.innerHTML    = statesList[s];\n            this.priceQuoteState.appendChild(option);\n        }\n\n        /**\n         * Add the onChange event listener to the state field\n         * so that we can change the style to match the placeholders\n         * based on the user having made a selection or not.\n         * Be sure to bind the correct context of \"this\",\n         * otherwise \"this\" becomes the state select element.\n         */\n        this.priceQuoteState.addEventListener('change', function(e) {\n            if( this.priceQuoteState.selectedIndex > 0 ) {\n                // The user has made a selection\n                this.priceQuoteState.classList.remove('placeholder');\n            } else {\n                // No selection yet (selectedIndex is 0, which is the placeholder option)\n                this.priceQuoteState.classList.add('placeholder');\n            }\n        }.bind(this), false);\n    }\n\n    /**\n     * Init the custom input event on name field.\n     * Be sure to bind the correct context of \"this\",\n     * otherwise \"this\" becomes the name field.\n     */\n    customInputEvent() {\n        this.priceQuoteName = document.getElementById('price_quote_name');\n        this.priceQuoteName.addEventListener('input', function(e) {\n            console.log(\"Name Field Value:\", this.priceQuoteName.value);\n        }.bind(this), false);\n    }\n\n    /**\n     * Open the modal.\n     * @param   {obj} e   The event object\n     */\n    openModal(e) {\n        e.stopPropagation();\n\n        // Hide the success message\n        document.getElementById('quote_message').classList.remove('show');\n\n        // Set the session Id\n        let sessionId = {\n            session_id: new Date().getTime()\n        };\n\n        // Log the session ID object to the console\n        console.log(sessionId);\n\n        this.overlay.classList.add('show');\n        this.modal.classList.add('show');\n    }\n\n    /**\n     * Close the modal.\n     * @param   {obj} e   The event object\n     */\n    closeModal(e) {\n        e.stopPropagation();\n        this.modal.classList.remove('show');\n        this.overlay.classList.remove('show');\n    }\n\n    /**\n     * Ajax action to submit the price quote form. Here we look for fields in error,\n     * or log the data to the console and close the modal.\n     * @param   {obj} e   The event object\n     */\n    submitPriceForm(e) {\n        e.preventDefault();\n\n        let numErrors   = 0;\n        let data        = {\n            variation: this.getVariant()\n        };\n        let required, filled, elem, type, id, forId;\n        for( let me in this.modalForm.elements ) {\n            elem = this.modalForm.elements[me];\n\n            // Look for elements that we've added validation to:\n            if( elem && elem.dataset && elem.dataset.validate ) {\n                type        = elem.tagName.toLowerCase();\n                id          = elem.getAttribute('id');\n                forId       = 'for_' + elem.getAttribute('id'); // The label id... follows consistent pattern\n                filled      = false; // Did the user enter something... assume not\n                required    = elem.getAttribute('required') !== null;\n\n                if( required ) {\n                    // Check to see if the required field has been filled\n                    if( type === 'input' ) {\n                        filled = elem.value.length > 0;\n                    } else if( type === 'select' ) {\n                        filled = elem.selectedIndex > 0;\n                    }\n                }\n\n                if( required && !filled ) {\n                    // Field is required and it's empty\n                    // Increment the error count\n                    numErrors++;\n\n                    // Show the error\n                    document.getElementById( 'for_' + elem.getAttribute('id') ).classList.add('show');\n\n                    // If it's the first error, then we'll want to focus the user on it\n                    if( numErrors === 1 ) {\n                        elem.focus();\n                    }\n                } else {\n                    // Hide the error, in case it's showing\n                    document.getElementById( 'for_' + elem.getAttribute('id') ).classList.remove('show');\n\n                    // Add it to the JSON object\n                    data[ elem.name ] = elem.value;\n                }\n            }\n        }\n\n        if( numErrors === 0 ) {\n            // Do the submit\n            \n            // Log the data\n            console.log(data);\n\n            // Show the success message\n            document.getElementById('quote_message').classList.add('show');\n            \n            // Close the modal\n            this.closeModal(e);\n        }\n    }\n    \n}"]}